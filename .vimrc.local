" keyboard shortcuts
inoremap jj <ESC>

" highlight search
set hlsearch
nmap <leader>hl :let @/ = ""<CR>
nmap <space> :noh<CR>

" gui settings
if (&t_Co == 256 || has('gui_running'))
    colorscheme solarized
    set background=dark
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps

" My stuff
"
" Powerline
let g:Powerline_symbols='fancy'
set laststatus=2
if has('gui_running')
  set guifont=Monaco:h12    " set fonts for gui vim
  set transparency=5        " set transparent window
  set guioptions=egmrt  " hide the gui menubar
endif

set backspace=indent,eol,start  " allow backspacing over everything in insert mode
set cursorline
set tabstop=4
set shiftwidth=4
set softtabstop=4
set nolist

" code folding set up
set foldmethod=syntax
set foldminlines=3
au Syntax javascript,go,python,c,cpp normal zR

" make arrow keys in normal mode resize the window
nmap <left>  :3wincmd <<cr>
nmap <right> :3wincmd ><cr>
nmap <up>    :3wincmd +<cr>
nmap <down>  :3wincmd -<cr>
nmap ; :

" Go
au FileType go set noexpandtab

" Python
au FileType python set list listchars=tab:»·,trail:·

" AngelScript
au BufRead,BufNewFile *.as set syntax=cpp
au BufRead,BufNewFile *.angelscript set syntax=cpp

let g:syntastic_mode_map = {'mode': 'active', 'passive_filetypes': ['html']}
let g:ycm_confirm_extra_conf = 0
